name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
        
    - name: Lint with flake8
      working-directory: ./backend
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      working-directory: ./backend
      run: |
        # Uncomment when tests are implemented
        # pytest

  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      working-directory: ./frontend/app
      run: npm install
      
    - name: Run build
      working-directory: ./frontend/app
      run: |
        # ビルドテスト（フロントエンドが正しく構築できるか）
        npm run build --if-present

  docker-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: false
        tags: app/backend:test
        
    - name: Build frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: app/frontend:test
        
    - name: Test Docker Compose
      run: |
        docker compose -f docker-compose.yml config
